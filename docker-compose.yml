version: "2.1"

services: 
  eureka-server: 
    build: eureka-server
    depends_on: 
      config-service: 
        condition: service_healthy
    healthcheck: 
      test: "exit 0"
    hostname: localhost
    image: eureka-service
    #mem_limit: 100m
    network_mode: host
    ports: 
      - "8761:8761"
    restart: always

  rsvp:
     build: rsvp/
     image: rsvp
     #mem_limit: 2g
     restart: always
     network_mode: "host"
     hostname: localhost
     ports:
       - 8094:8094
     depends_on:
       config-service:
         condition: service_healthy
       eureka-server:
         condition: service_healthy
       mongodb:
         condition: service_healthy
       kafka:
         condition: service_healthy
     healthcheck:
       test: "exit 0"
       
  redis:
    container_name: redis
    image: redis
    ports:
     - "6379:6379"
    command: redis-server --appendonly yes
    volumes:
     - ../data/redis:/data
    restart: always
    healthcheck:
     test: "exit 0"
     
  emailservice:
     build: emailservice/
     image: emailservice
     #mem_limit: 2g
     restart: always
     network_mode: "host"
     hostname: localhost
     ports:
       - 8093:8093
     depends_on:
       config-service:
         condition: service_healthy
       eureka-server:
         condition: service_healthy
     healthcheck:
       test: "exit 0"

  api-gateway: 
    build: zuul-apigateway
    depends_on: 
      config-service: 
        condition: service_healthy
      eureka-server: 
        condition: service_healthy
    healthcheck: 
      test: "exit 0"
    hostname: localhost
    image: zuul-service
   # mem_limit: 200m
    network_mode: host
    ports: 
      - "8762:876"
    restart: always

  authentication-service: 
    build: authentication-service
    depends_on: 
      config-service: 
        condition: service_healthy
      eureka-server: 
        condition: service_healthy
      kafka: 
        condition: service_healthy
      mysql: 
        condition: service_healthy
    healthcheck: 
      test: "exit 0"
    hostname: localhost
    image: authentication-service
    #mem_limit: 200m
    network_mode: host
    ports: 
      - "8080:8080"
    restart: always


  config-service: 
    build: config-service
    healthcheck: 
      test: "exit 0"
    hostname: localhost
    image: config-service
    #mem_limit: 200m
    network_mode: host
    ports: 
      - "8084:8084"
    restart: always

  distributor-service: 
    build: distributor-service
    depends_on: 
      config-service: 
        condition: service_healthy
      eureka-server: 
        condition: service_healthy
      mongodb: 
        condition: service_healthy
    healthcheck: 
      test: "exit 0"
    hostname: localhost
    image: distributor-service1
    #mem_limit: 200m
    network_mode: host
    ports: 
      - "8088:8088"
    restart: always

  kafka: 
    depends_on: 
      - zookeeper
    environment: 
      KAFKA_ADVERTISED_LISTENERS: "PLAINTEXT://13.232.40.6:9092"
      KAFKA_LISTENERS: "PLAINTEXT://0.0.0.0:9092"
      KAFKA_ZOOKEEPER_CONNECT: "localhost:2181"
    healthcheck: 
      test: "exit 0"
    hostname: localhost
    image: wurstmeister/kafka
    #mem_limit: 512m
    network_mode: host
    ports: 
      - "9092:9092"
    restart: always

  mongodb: 
    container_name: mongodb
    healthcheck: 
      test: "exit 0"
    image: mongo
    #mem_limit: 512m
    ports: 
      - "27000:27017"
    restart: always
    volumes: 
      - "./data/db:/data/db"

  moviescreening-service: 
    build: moviescreening-service
    depends_on: 
      config-service: 
        condition: service_healthy
      eureka-server: 
        condition: service_healthy
      kafka: 
        condition: service_healthy
      mongodb: 
        condition: service_healthy
    healthcheck: 
      test: "exit 0"
    hostname: localhost
    image: moviescreening-service
    #mem_limit: 250m
    network_mode: host
    ports: 
      - "8082:8082"
    restart: always

  mysql: 
    container_name: mysql
    environment: 
      - MYSQL_ROOT_PASSWORD=root
      - MYSQL_DATABASE=register
      - MYSQL_PASSWORD=root
      - MYSQL_USER=root
    healthcheck: 
      test: "exit 0"
    hostname: localhost
    image: "mysql:5.7"
    #mem_limit: 512m
    network_mode: host
    ports: 
      - "3306:3306"
    restart: always
    volumes: 
      - "/opt/datasql:/var/lib/mysql"

  neo4j: 
    container_name: neo4j
    environment: 
      - NEO4J_AUTH=neo4j/neo4j
    healthcheck: 
      test: "exit 0"
    image: "neo4j:latest"
    #mem_limit: 1024m
    ports: 
       - "7474:7474"
       - "7687:7687"
    volumes: 
      - "$HOME/neo4j/data:/data"

  recommendation-service: 
    build: recommendation-service
    depends_on: 
      config-service: 
        condition: service_healthy
      eureka-server: 
        condition: service_healthy
      kafka: 
        condition: service_healthy
      moviescreening-service: 
        condition: service_healthy
      neo4j: 
        condition: service_healthy
    healthcheck: 
      test: "exit 0"
    hostname: localhost
    image: recommendation-service
    #mem_limit: 250m
    network_mode: host
    ports: 
      - "8091:8091"
    restart: always
  
  schedular-service: 
    build: schedular-service
    depends_on: 
      config-service: 
        condition: service_healthy
      eureka-server: 
        condition: service_healthy
      kafka: 
        condition: service_healthy
      moviescreening-service: 
        condition: service_healthy
    healthcheck: 
      test: "exit 0"
    hostname: localhost
    image: schedular-service
    #mem_limit: 200m
    network_mode: host
    ports: 
      - "8095:8095"
    restart: always
  
  search-service: 
    build: search-service
    depends_on: 
      config-service: 
        condition: service_healthy
      eureka-server: 
        condition: service_healthy
      kafka: 
        condition: service_healthy
      mongodb: 
        condition: service_healthy
      moviescreening-service: 
        condition: service_healthy
    healthcheck: 
      test: "exit 0"
    hostname: localhost
    image: search-service
    #mem_limit: 200m
    network_mode: host
    ports: 
      - "8089:8089"
    restart: always


  ticketingengine-service: 
    build: ticketingengine-service
    depends_on: 
      config-service: 
        condition: service_healthy
      redis: 
        condition: service_healthy
      kafka: 
        condition: service_healthy
      mongodb: 
        condition: service_healthy
      moviescreening-service: 
        condition: service_healthy
      schedular-service: 
        condition: service_healthy
    healthcheck: 
      test: "exit 0"
    hostname: localhost
    image: search-service
    #mem_limit: 200m
    network_mode: host
    ports: 
      - "8091:8091"
    restart: always



  paymentservice: 
    build: paymentservice
    depends_on: 
      kafka: 
        condition: service_healthy
    healthcheck: 
      test: "exit 0"
    hostname: localhost
    image: search-service
    #mem_limit: 200m
    network_mode: host
    ports: 
      - "8095:8095"
    restart: always

  theatre-service: 
    build: theatre-service
    depends_on: 
      config-service: 
        condition: service_healthy
      eureka-server: 
        condition: service_healthy
      mongodb: 
        condition: service_healthy
    healthcheck: 
      test: "exit 0"
    hostname: localhost
    image: theatre-service
    #mem_limit: 200m
    network_mode: host
    ports: 
      - "8087:8087"
    restart: always
  
  user-profile: 
    build: user-profile
    depends_on: 
      config-service: 
        condition: service_healthy
      eureka-server: 
        condition: service_healthy
      kafka: 
        condition: service_healthy
      mongodb: 
        condition: service_healthy
    healthcheck: 
      test: "exit 0"
    hostname: localhost
    image: user-profile
    #mem_limit: 200m
    network_mode: host
    ports: 
      - "8085:8085"
    restart: always
  
  zookeeper: 
    healthcheck: 
      test: "exit 0"
    hostname: localhost
    image: wurstmeister/zookeeper
    #mem_limit: 200m
    network_mode: host
    ports: 
      - "2181:2181"
    restart: always

  buzzup-front-end:
   build: Buzzup-Front-End
   image: buzzup-front-end
   container_name: buzzup-front-end
   network_mode: "host"
   hostname: localhost
   ports:
    - 4200:4200
   restart: always
   healthcheck:
    test: "exit 0" 

